application.onAppStart = function()
{
	// Get the server shared object 'users_so'
	application.users_so = SharedObject.get("users_so", false);
	
	// Initialize the unique user ID
	application.nextId = 0;
}

// If server-side code is part of the application,
// it must define an onConnect function that accepts
// the client connection.
application.onConnect = function( client, name ) {

	// Make this new client's name the user's name
	client.name = name;
	
	// Create a unique ID for this user while incrementing the
	// application.nextID.
	client.id = "u" + application.nextId++;
	              trace(client.id);
	client.getId = function(){
		return this.id;
	}
	
	var user = new Object();
		user.name = name;
		user.uid  = client.id;
		user.graphics  = null;
		user.shareRequest  = null;
		user.shareResponses  = null;
		user.settings = null;
		user.isSend = false;
		user.connectedTo = null;
	      trace(user);
	// Update the 'users_so' shared object with the user's name
	application.users_so.setProperty( client.id , user );

	// Establish the connection
	application.acceptConnection( client );
}

application.onDisconnect = function(client)
{
	application.users_so.setProperty(client.id, null);
}

// Called when user presses a bandwidth choice (Modem=1, DSL=2, LAN=3)
Client.prototype.setBandwidth = function(bw) {

	// set the bandwidth for the client
	if ( bw == 1 ) {
		// modem settings
		this.setBandwidthLimit( 35000/8, 22000/8 );
	} else if ( bw == 2 ) {
		// DSL settings
		this.setBandwidthLimit( 800000/8, 100000/8 );
	} else /*if ( bw == 3 )*/ {
		// LAN settings
		this.setBandwidthLimit( 400000, 400000 );
	}
}